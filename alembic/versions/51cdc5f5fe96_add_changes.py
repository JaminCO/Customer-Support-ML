"""add changes

Revision ID: 51cdc5f5fe96
Revises: f7ef3b6fc1fb
Create Date: 2025-07-03 08:23:22.570286

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '51cdc5f5fe96'
down_revision: Union[str, Sequence[str], None] = 'f7ef3b6fc1fb'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_support_tickets_id'), table_name='support_tickets')
    op.drop_table('support_tickets')
    op.drop_index(op.f('ix_ai_results_id'), table_name='ai_results')
    op.drop_table('ai_results')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ai_results',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('ticket_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('category', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('confidence', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('summary', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['ticket_id'], ['support_tickets.id'], name=op.f('ai_results_ticket_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('ai_results_pkey'))
    )
    op.create_index(op.f('ix_ai_results_id'), 'ai_results', ['id'], unique=False)
    op.create_table('support_tickets',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('subject', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('body', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('text', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('queue', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('priority', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('language', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('tags', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('support_tickets_pkey'))
    )
    op.create_index(op.f('ix_support_tickets_id'), 'support_tickets', ['id'], unique=False)
    # ### end Alembic commands ###
